//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;
use uuid::Uuid;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "expense")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub budget_id: Uuid,
    #[sea_orm(column_type = "Double")]
    pub amount: f64,
    pub description: String,
    pub date: String,
    pub created_at: String,
    pub updated_at: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::budget::Entity",
        from = "Column::BudgetId",
        to = "super::budget::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Budget,
}

impl Related<super::budget::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Budget.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
